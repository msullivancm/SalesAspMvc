//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw", ConfigurationName="ServiceReference1.CFGTABLESOAP")]
    public interface CFGTABLESOAP
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.microsiga.com.br/cfgtable.apw/GETTABLE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.GETTABLEResponse> GETTABLEAsync(ServiceReference1.GETTABLERequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw")]
    public partial class TABLEVIEW
    {
        
        private FIELDVIEW[] tABLEDATAField;
        
        private FIELDSTRUCT[] tABLESTRUCTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FIELDVIEW[] TABLEDATA
        {
            get
            {
                return this.tABLEDATAField;
            }
            set
            {
                this.tABLEDATAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FIELDSTRUCT[] TABLESTRUCT
        {
            get
            {
                return this.tABLESTRUCTField;
            }
            set
            {
                this.tABLESTRUCTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw")]
    public partial class FIELDVIEW
    {
        
        private string[] fLDTAGField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("STRING", IsNullable=false)]
        public string[] FLDTAG
        {
            get
            {
                return this.fLDTAGField;
            }
            set
            {
                this.fLDTAGField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw")]
    public partial class FIELDSTRUCT
    {
        
        private string fLDDECField;
        
        private string fLDNAMEField;
        
        private string fLDSIZEField;
        
        private string fLDTYPEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string FLDDEC
        {
            get
            {
                return this.fLDDECField;
            }
            set
            {
                this.fLDDECField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FLDNAME
        {
            get
            {
                return this.fLDNAMEField;
            }
            set
            {
                this.fLDNAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=2)]
        public string FLDSIZE
        {
            get
            {
                return this.fLDSIZEField;
            }
            set
            {
                this.fLDSIZEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FLDTYPE
        {
            get
            {
                return this.fLDTYPEField;
            }
            set
            {
                this.fLDTYPEField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GETTABLE", WrapperNamespace="http://webservices.microsiga.com.br/cfgtable.apw", IsWrapped=true)]
    public partial class GETTABLERequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw", Order=0)]
        public string USERCODE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw", Order=1)]
        public string ALIAS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw", Order=2)]
        public string QUERYADDWHERE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw", Order=3)]
        public string BRANCH;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw", Order=4)]
        public string LISTFIELDSVIEW;
        
        public GETTABLERequest()
        {
        }
        
        public GETTABLERequest(string USERCODE, string ALIAS, string QUERYADDWHERE, string BRANCH, string LISTFIELDSVIEW)
        {
            this.USERCODE = USERCODE;
            this.ALIAS = ALIAS;
            this.QUERYADDWHERE = QUERYADDWHERE;
            this.BRANCH = BRANCH;
            this.LISTFIELDSVIEW = LISTFIELDSVIEW;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GETTABLERESPONSE", WrapperNamespace="http://webservices.microsiga.com.br/cfgtable.apw", IsWrapped=true)]
    public partial class GETTABLEResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.microsiga.com.br/cfgtable.apw", Order=0)]
        public ServiceReference1.TABLEVIEW GETTABLERESULT;
        
        public GETTABLEResponse()
        {
        }
        
        public GETTABLEResponse(ServiceReference1.TABLEVIEW GETTABLERESULT)
        {
            this.GETTABLERESULT = GETTABLERESULT;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface CFGTABLESOAPChannel : ServiceReference1.CFGTABLESOAP, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class CFGTABLESOAPClient : System.ServiceModel.ClientBase<ServiceReference1.CFGTABLESOAP>, ServiceReference1.CFGTABLESOAP
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CFGTABLESOAPClient() : 
                base(CFGTABLESOAPClient.GetDefaultBinding(), CFGTABLESOAPClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.CFGTABLESOAP.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CFGTABLESOAPClient(EndpointConfiguration endpointConfiguration) : 
                base(CFGTABLESOAPClient.GetBindingForEndpoint(endpointConfiguration), CFGTABLESOAPClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CFGTABLESOAPClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CFGTABLESOAPClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CFGTABLESOAPClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CFGTABLESOAPClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CFGTABLESOAPClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GETTABLEResponse> GETTABLEAsync(ServiceReference1.GETTABLERequest request)
        {
            return base.Channel.GETTABLEAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CFGTABLESOAP))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.CFGTABLESOAP))
            {
                return new System.ServiceModel.EndpointAddress("https://www.caberj.com.br/wspp0101/CFGTABLE.apw");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CFGTABLESOAPClient.GetBindingForEndpoint(EndpointConfiguration.CFGTABLESOAP);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CFGTABLESOAPClient.GetEndpointAddress(EndpointConfiguration.CFGTABLESOAP);
        }
        
        public enum EndpointConfiguration
        {
            
            CFGTABLESOAP,
        }
    }
}
